# Define plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'omerxx/tmux-sessionx'
set -g @plugin 'omerxx/tmux-floax'

# Basic stuff
set -g mode-keys vi
set -g status-keys vi
set -g mouse on
set -g status-position top

# Prefix key
# set -g prefix C-b
unbind C-b
set -g prefix C-k
bind C-k send-prefix

# Colors
# set -g default-terminal "tmux-256color"
# set -ag terminal-overrides ",xterm-256color:RGB"
set -sa terminal-overrides ",xterm*:Tc"

# Change shell to Fish
# set-option -g default-shell /usr/local/bin/fish
# set-option -g default-shell /usr/local/bin/nu
# set-option -g default-shell /run/current-system/sw/bin/nu
if-shell 'test "$(uname -s)" = Darwin' 'set-option -g default-shell "/etc/profiles/per-user/jaszczur/bin/nu"'
if-shell 'test "$(uname -s)" = Linux' 'set-option -g default-shell "/usr/bin/nu"'

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Start windows in current directory
bind c new-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind "\"" split-window -v -c "#{pane_current_path}"

# C-i is the same as TAB
bind-key C-i next-window
bind-key i next-window

bind-key -T copy-mode-vi n send-keys -X cursor-down
bind-key -T copy-mode-vi e send-keys -X cursor-up
bind-key -T copy-mode-vi i send-keys -X cursor-right
bind-key -T copy-mode-vi k send-keys -X search-again
bind-key -T copy-mode-vi K send-keys -X search-reverse
bind-key -T copy-mode-vi j send-keys -X next-word-end
bind-key -T copy-mode-vi J send-keys -X next-space-end
bind-key -T copy-mode-vi c-n send-keys -X copy-selection

bind-key -T choice-mode n send-keys -X down
bind-key -T choice-mode e send-keys -X up
bind-key -T choice-mode c-n send-keys -X choose

bind-key -T edit-mode-vi c-n send-keys -X enter

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# set-hook -g before-choose-session "bind-key -Troot n send-keys -X down"
# set-hook -g after-choose-session "unbind-key -Troot n"


# set -g @plugin 'arcticicestudio/nord-tmux'
# set -g @plugin 'dracula/tmux'
# set -g @onedark_date_format "%d.%m.%Y"
# set -g @plugin 'odedlaz/tmux-onedark-theme'
#set -g @plugin 'egel/tmux-gruvbox'
#set -g @tmux-gruvbox 'light' # 'dark' or 'light'
#set -g @plugin 'seebi/tmux-colors-solarized'
set -g @catppuccin_flavour 'macchiato'
set -g @catppuccin_window_status_style "rounded"
set -g @catppuccin_window_current_text "#{window_name}"
set -g @catppuccin_window_text "#{window_name} (#{pane_current_command})"

# Make the status line pretty and add some modules
set -g status-right-length 100
set -g status-left-length 100
set -g status-left ""
set -g status-right "#{E:@catppuccin_status_application}"
# set -agF status-right "#{E:@catppuccin_status_cpu}"
set -ag status-right "#{E:@catppuccin_status_session}"
# set -ag status-right "#{E:@catppuccin_status_uptime}"
# set -agF status-right "#{E:@catppuccin_status_battery}"

# Sesh integration
# bind-key "T" run-shell "sesh connect \"$(
#   sesh list --icons | fzf-tmux -p 55%,60% \
#     --no-sort --ansi --border-label ' sesh ' --prompt '‚ö°  ' \
#     --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
#     --bind 'tab:down,btab:up' \
#     --bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list --icons)' \
#     --bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t --icons)' \
#     --bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c --icons)' \
#     --bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z --icons)' \
#     --bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
#     --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(‚ö°  )+reload(sesh list --icons)' \
# )\""
# bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt
# set -g detach-on-destroy off  # don't exit from tmux when closing a session

# tmux-sessionx integration
set -g @sessionx-fzf-builtin-tmux 'on'
set -g @sessionx-zoxide-mode 'on'
set -g @sessionx-preview-ratio '62%'

# [[Vim]] tmux configuration
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/alexghergh/nvim-tmux-navigation
# This needs to  be on par with neovim config, see |~/.config/nvim/lua/custom/plugins/tmux.lua|

# # decide whether we're in a Vim process
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
# bind-key -n 'C-n' if-shell "$is_vim" 'send-keys C-n' 'select-pane -D'
# bind-key -n 'C-e' if-shell "$is_vim" 'send-keys C-e' 'select-pane -U'
# bind-key -n 'C-i' if-shell "$is_vim" 'send-keys C-i' 'select-pane -R'
#
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
#
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
#
# bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'
#
# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-n' select-pane -D
# bind-key -T copy-mode-vi 'C-e' select-pane -U
# bind-key -T copy-mode-vi 'C-i' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l

# bind-key -T copy-mode-vi 'C-<' select-pane -t:.-
# bind-key -T copy-mode-vi 'C->' select-pane -t:.+

run '~/.tmux/plugins/tpm/tpm'

